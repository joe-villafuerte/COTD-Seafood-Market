{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","console","log","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.f5e7feda.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  goToStore = (event) => {\n    //1. Stop the form from submitting\n    event.preventDefault();\n    //2. Get the text from that input\n    const storeName = this.myInput.current.value;\n    //3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter a Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n// class Header extends React.Component {\n//   render() {\n//     return (\n//       <header className=\"top\">\n//         <h1>\n//           Catch\n//           <span className=\"ofThe\">\n//             <span className=\"of\">of</span>\n//             <span className=\"the\">the</span>\n//           </span>\n//           Day\n//         </h1>\n//         <h3 className=\"tagline\">\n//           <span>{this.props.tagline}</span>\n//         </h3>\n//       </header>\n//     );\n//   }\n// }\n\nexport default Header;\n","import React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    //Make sure the fish is loaded before we continue\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition\n          classNames=\"order\"\n          key={key}\n          timeout={{ enter: 500, exit: 500 }}\n        >\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition\n        classNames=\"order\"\n        key={key}\n        timeout={{ enter: 500, exit: 500 }}\n      >\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createFish = (event) => {\n    //1. Stop the from from submitting\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    this.props.addFish(fish);\n    //Refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input type=\"text\" ref={this.nameRef} name=\"name\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ ADD FISH</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\n\nclass EditFishForm extends React.Component {\n  handleChange = (event) => {\n    //update that fish\n    //1. Take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log in with Github\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Log in with Facebook\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n      Log in with Twitter\n    </button>\n  </nav>\n);\n\n// Login.propTypes = {\n//   authenticate: propType.func.isRequired,\n// };\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBMjQjgMPTih8qmzDBr0jVfL_JJr6y-2DI\",\n  authDomain: \"catch-of-the-day-jv-641e4.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-jv-641e4-default-rtdb.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n//This is a name export\nexport { firebaseApp };\n\n//This is a default export\nexport default base;\n","import React from \"react\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n  authHandler = async (authData) => {\n    //1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    //2. Claim it if there is no owner\n    if (!store.owner)\n      //save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    //3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  };\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n    //1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    //2. Check if they are not owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner</p>\n          {logout}\n        </div>\n      );\n    }\n\n    //3. They must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory!!</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map((key) => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n    }),\n    addToOrder: PropTypes.func,\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">{name}</h3>\n        <span className=\"price\">{formatPrice(price)}</span>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add to Order\" : \"Sold Out\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n  componentDidMount() {\n    const { params } = this.props.match;\n    // First reinstate local storage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    console.log(localStorageRef);\n    if (localStorage) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\",\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    //1. take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    //2. add the new fish to the fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    //3. set the new fishes object to state\n    this.setState({\n      fishes,\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    //1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    //2. Update that state\n    fishes[key] = updatedFish;\n    //3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    //1. Take a copy of state\n    const fishes = { ...this.state.fishes };\n    //2. Update the state (removed)\n    fishes[key] = null;\n    //3. Update state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = (key) => {\n    //1. Take a copy of state\n    const order = { ...this.state.order };\n    //2. Either add to the order or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    //3. Call setState to update our state object\n    this.setState({ order });\n  };\n  removeFromOrder = (key) => {\n    //1. Take a copy of state\n    const order = { ...this.state.order };\n    //2. Remove item from order\n    delete order[key];\n    //3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map((key) => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          deleteFish={this.deleteFish}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>NOT FOUND!!!!!!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route exact path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}